@model FitnessWebAppModels.Exercise

@{
    ViewData["Title"] = "ShowExercise";
}
<style>
    .widget-area.blank {
        background: none repeat scroll 0 0 rgba(0, 0, 0, 0);
        -webkit-box-shadow: none;
        -moz-box-shadow: none;
        -ms-box-shadow: none;
        -o-box-shadow: none;
        box-shadow: none;
    }

    body .no-padding {
        padding: 0;
    }

    .widget-area {
        background-color: #fff;
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
        -ms-border-radius: 4px;
        -o-border-radius: 4px;
        border-radius: 4px;
        -webkit-box-shadow: 0 0 16px rgba(0, 0, 0, 0.05);
        -moz-box-shadow: 0 0 16px rgba(0, 0, 0, 0.05);
        -ms-box-shadow: 0 0 16px rgba(0, 0, 0, 0.05);
        -o-box-shadow: 0 0 16px rgba(0, 0, 0, 0.05);
        box-shadow: 0 0 16px rgba(0, 0, 0, 0.05);
        float: left;
        margin-top: 30px;
        padding: 25px 30px;
        position: relative;
        width: 100%;
    }

    .dropdown > a > span.green:before {
        border-left-color: #2dcb73;
    }
</style>

<h2>@Html.DisplayFor(model => model.Name)</h2>

<button button onclick="LikeExercise(@Model.Id)" type="button" class="btn btn-default btn-sm">
    <span class="glyphicon glyphicon-thumbs-up"></span> Like
</button> 
<p> Likes: @Model.Kudos</p>
<div>
    <h4> @Html.DisplayNameFor(model => model.MuscleGroup)</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Info:
        </dt>
        <dd>
            @Model.Description
        </dd>
    </dl>
    @if (User.Identity.IsAuthenticated)
    {
        <div class="container">
            <div class="row">
                <h3>Add comment</h3>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="widget-area no-padding blank">
                        <div class="status-upload">
                            <textarea class="form-control" id="Comment" placeholder="Post your comment here!"></textarea> <br />
                            <button id="Postcomment" class="btn btn-success green" style="margin-top:20px"><i class="fa fa-share"></i> Place comment</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.Comments.Count > 0)
    {
        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="page-header">
                        <h1><small class="pull-right">@Model.Comments.Count Comments</small> Comments </h1>
                    </div>
                    <div class="comments-list">
                        <div class="media col-xs-12">
                            @foreach (var comment in Model.Comments)
                            {
                                <div style="margin: 20px">
                                    <h4 class="media-heading user_name">@comment.Nickname</h4>
                                    <div class="col-xs-8">
                                        <p>
                                            @comment.Text
                                        </p>
                                    </div>
                                    <div class="col-xs-4">
                                        <button button onclick="LikeComment(@comment.ID)" style="margin-left:auto; margin-right:0; " id="LikePlanBtn" type="button" class="btn btn-default btn-sm">
                                            <span class="glyphicon glyphicon-thumbs-up"></span> Like
                                        </button>
                                        @comment.Kudos
                                        @if (User.Identity.Name == comment.Nickname || User.IsInRole("Admin"))
                                        {
                                            <button button onclick="RemoveComment(@comment.ID)" style="margin-left:auto; margin-right:0;margin-top: 20px;" id="LikePlanBtn" type="button" class="btn btn-default btn-sm">
                                                <span class="glyphicon glyphicon-thumbs-up"></span> Remove comment
                                            </button>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $('#Postcomment').click(function() {
            if ($('#Comment').val().length < 3) {
                alert("Enter at least 3 tokens");
            } else {
                $.ajax({
                    url: '@Url.Action("AddCommentToExercise","Comment")',
                    data: {
                        exerciseId:@Model.Id,
                        text: $('#Comment').val()
                    },
                    type: "POST",
                    dataType: "json",
                    success: function(result) {
                        console.log("Successfully placed comment!");
                        alert(result.message);
                        location.reload();
                    },
                    error: function () {
                        alert("Adding comment failed");
                    }
                });
            }
        });

        function LikeComment(id)
        {
            console.log(id);
            if (id == undefined) {
                alert("Cant add kudo");
            } else {
                $.ajax({
                    url: '@Url.Action("AddKudoToComment", "Comment")',
                    data: {
                        commentId: id
                    },
                    type: "POST",
                    dataType: "json",
                    success: function(result) {
                        console.log("Success");
                        alert(result.message);
                        location.reload(); 
                    },
                    error: function () {
                        alert("Cant add kudo");
                    }
                });
            }
        }

        function RemoveComment(id) {
            $.ajax({
                url: '@Url.Action("RemoveComment","Comment")',
                data: {
                    commentId: id
                },
                type: "POST",
                dataType: "json",
                success: function(result) {
                    console.log("Successfully placed comment!");
                    alert(result.message);
                    location.reload(); 
                },
                error: function () {
                    alert("Adding comment failed");
                }
            });
        }

        function LikeExercise(id) {
            $.ajax({
                url: '@Url.Action("AddKudoToExercise","Exercise")',
                data: {
                    exerciseId: id
                },
                type: "POST",
                dataType: "json",
                success: function(result) {
                    console.log("Successfully placed comment!");
                    alert(result.message);
                    location.reload(); 
                },
                error: function () {
                    alert("Adding comment failed");
                }
            });
        }

    </script>
}
